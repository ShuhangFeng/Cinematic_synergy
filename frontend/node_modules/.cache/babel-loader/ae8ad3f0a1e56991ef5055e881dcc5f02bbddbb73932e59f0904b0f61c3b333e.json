{"ast":null,"code":"var _jsxFileName = \"/Users/shuhang/Desktop/USC homework/DSCI551/movie-review-website/src/components/UserManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport moviesData from './movies.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserManager() {\n  _s();\n  const [movies, setMovies] = useState(moviesData);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [commentText, setCommentText] = useState('');\n  const [userName, setUserName] = useState('');\n  const [selectedMovieId, setSelectedMovieId] = useState(null); // State to track the selected movie ID\n\n  const filteredMovies = movies.filter(movie => movie.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  const addComment = movieId => {\n    const updatedMovies = movies.map(movie => {\n      if (movie.id === movieId) {\n        const newCommentId = movie.comments.length > 0 ? Math.max(...movie.comments.map(c => c.id)) + 1 : 1;\n        const updatedMovie = {\n          ...movie,\n          comments: [...movie.comments, {\n            id: newCommentId,\n            text: commentText,\n            user: userName\n          }]\n        };\n        return updatedMovie;\n      }\n      return movie;\n    });\n    setMovies(updatedMovies);\n    setCommentText('');\n    setUserName('');\n    setSelectedMovieId(null); // Reset selected movie after adding a comment\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a movie\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), filteredMovies.length > 0 && filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setSelectedMovieId(movie.id),\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)), selectedMovieId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userName,\n        onChange: e => setUserName(e.target.value),\n        placeholder: \"Your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: commentText,\n        onChange: e => setCommentText(e.target.value),\n        placeholder: \"Leave a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addComment(selectedMovieId),\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(UserManager, \"vksq7HCnljklkMuMPsRz7YCiUYE=\");\n_c = UserManager;\nexport default UserManager;\nvar _c;\n$RefreshReg$(_c, \"UserManager\");","map":{"version":3,"names":["React","useState","moviesData","jsxDEV","_jsxDEV","UserManager","_s","movies","setMovies","searchQuery","setSearchQuery","commentText","setCommentText","userName","setUserName","selectedMovieId","setSelectedMovieId","filteredMovies","filter","movie","name","toLowerCase","includes","addComment","movieId","updatedMovies","map","id","newCommentId","comments","length","Math","max","c","updatedMovie","text","user","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/shuhang/Desktop/USC homework/DSCI551/movie-review-website/src/components/UserManager.js"],"sourcesContent":["import React, { useState } from 'react';\nimport moviesData from './movies.json';\n\nfunction UserManager() {\n  const [movies, setMovies] = useState(moviesData);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [commentText, setCommentText] = useState('');\n  const [userName, setUserName] = useState('');\n  const [selectedMovieId, setSelectedMovieId] = useState(null); // State to track the selected movie ID\n\n  const filteredMovies = movies.filter(movie =>\n    movie.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const addComment = (movieId) => {\n    const updatedMovies = movies.map(movie => {\n      if (movie.id === movieId) {\n        const newCommentId = movie.comments.length > 0 ? Math.max(...movie.comments.map(c => c.id)) + 1 : 1;\n        const updatedMovie = {\n          ...movie,\n          comments: [...movie.comments, { id: newCommentId, text: commentText, user: userName }]\n        };\n        return updatedMovie;\n      }\n      return movie;\n    });\n    setMovies(updatedMovies);\n    setCommentText('');\n    setUserName('');\n    setSelectedMovieId(null); // Reset selected movie after adding a comment\n  };\n\n  return (\n    <div>\n      <h2>User Manager</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search for a movie\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n      {filteredMovies.length > 0 && (\n        filteredMovies.map(movie => (\n          <div key={movie.id} onClick={() => setSelectedMovieId(movie.id)}>\n            <h3>{movie.name}</h3>\n          </div>\n        ))\n      )}\n      {selectedMovieId && (\n        <div>\n          <h3>Add Comment</h3>\n          <input\n            type=\"text\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n            placeholder=\"Your name\"\n          />\n          <input\n            type=\"text\"\n            value={commentText}\n            onChange={(e) => setCommentText(e.target.value)}\n            placeholder=\"Leave a comment\"\n          />\n          <button onClick={() => addComment(selectedMovieId)}>Add Comment</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}