{"ast":null,"code":"var _jsxFileName = \"/Users/shuhang/Desktop/USC homework/DSCI551/movie-review-website/src/components/UserManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport moviesData from './movies.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserManager() {\n  _s();\n  const [movies, setMovies] = useState(moviesData); // This should ideally come from a context or prop\n  const [commentText, setCommentText] = useState('');\n  const [user, setUser] = useState('');\n  const addComment = movieId => {\n    const updatedMovies = movies.map(movie => {\n      if (movie.id === movieId) {\n        const updatedMovie = {\n          ...movie,\n          comments: [...movie.comments, {\n            id: movie.comments.length + 1,\n            text: commentText,\n            user: \"UserX\"\n          }]\n        };\n        return updatedMovie;\n      }\n      return movie;\n    });\n    setMovies(updatedMovies);\n    setCommentText(''); // Reset comment input\n  };\n\n  // Simple input handler\n  const handleCommentChange = e => {\n    setCommentText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movie.comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [comment.text, \" - \", comment.user]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: commentText,\n        onChange: handleCommentChange,\n        placeholder: \"Leave a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addComment(movie.id),\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(UserManager, \"3iCXxzot8FAs2MuzzooUQuQlEiY=\");\n_c = UserManager;\nexport default UserManager;\nvar _c;\n$RefreshReg$(_c, \"UserManager\");","map":{"version":3,"names":["React","useState","moviesData","jsxDEV","_jsxDEV","UserManager","_s","movies","setMovies","commentText","setCommentText","user","setUser","addComment","movieId","updatedMovies","map","movie","id","updatedMovie","comments","length","text","handleCommentChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","name","comment","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/shuhang/Desktop/USC homework/DSCI551/movie-review-website/src/components/UserManager.js"],"sourcesContent":["import React, { useState } from 'react';\nimport moviesData from './movies.json';\n\n\nfunction UserManager() {\n  const [movies, setMovies] = useState(moviesData); // This should ideally come from a context or prop\n  const [commentText, setCommentText] = useState('');\n  const [user, setUser] = useState('');\n\n  const addComment = (movieId) => {\n    const updatedMovies = movies.map(movie => {\n      if (movie.id === movieId) {\n        const updatedMovie = {\n          ...movie,\n          comments: [...movie.comments, { id: movie.comments.length + 1, text: commentText, user: \"UserX\" }]\n        };\n        return updatedMovie;\n      }\n      return movie;\n    });\n    setMovies(updatedMovies);\n    setCommentText(''); // Reset comment input\n  };\n\n  // Simple input handler\n  const handleCommentChange = (e) => {\n    setCommentText(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2>User Manager</h2>\n      {movies.map(movie => (\n        <div key={movie.id}>\n          <h3>{movie.name}</h3>\n          <ul>\n            {movie.comments.map(comment => (\n              <li key={comment.id}>{comment.text} - {comment.user}</li>\n            ))}\n          </ul>\n          <input\n            type=\"text\"\n            value={commentText}\n            onChange={handleCommentChange}\n            placeholder=\"Leave a comment\"\n          />\n          <button onClick={() => addComment(movie.id)}>Add Comment</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default UserManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}