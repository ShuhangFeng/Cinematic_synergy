{"ast":null,"code":"var _jsxFileName = \"/Users/shuhang/Desktop/USC homework/DSCI551/movie-review-website/src/components/UserManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport moviesData from './movies.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserManager() {\n  _s();\n  const [movies, setMovies] = useState(moviesData);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [commentText, setCommentText] = useState('');\n  const [userName, setUserName] = useState('');\n  const [selectedMovieId, setSelectedMovieId] = useState(null);\n  const filteredMovies = movies.filter(movie => movie.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  const addComment = movieId => {\n    const updatedMovies = movies.map(movie => {\n      if (movie.id === movieId) {\n        const newCommentId = movie.comments.length > 0 ? Math.max(...movie.comments.map(c => c.id)) + 1 : 1;\n        const updatedMovie = {\n          ...movie,\n          comments: [...movie.comments, {\n            id: newCommentId,\n            text: commentText,\n            user: userName\n          }]\n        };\n        return updatedMovie;\n      }\n      return movie;\n    });\n    setMovies(updatedMovies);\n    setCommentText('');\n    setUserName('');\n  };\n  const updateComment = (movieId, commentId) => {\n    const newText = prompt(\"Update your comment:\");\n    if (newText !== null && newText.trim() !== '') {\n      setMovies(movies.map(movie => {\n        if (movie.id === movieId) {\n          return {\n            ...movie,\n            comments: movie.comments.map(comment => {\n              if (comment.id === commentId) {\n                return {\n                  ...comment,\n                  text: newText\n                };\n              }\n              return comment;\n            })\n          };\n        }\n        return movie;\n      }));\n    }\n  };\n  const deleteComment = (movieId, commentId) => {\n    setMovies(movies.map(movie => {\n      if (movie.id === movieId) {\n        return {\n          ...movie,\n          comments: movie.comments.filter(comment => comment.id !== commentId)\n        };\n      }\n      return movie;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a movie\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), filteredMovies.length > 0 && filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => setSelectedMovieId(selectedMovieId === movie.id ? null : movie.id),\n        style: {\n          cursor: 'pointer',\n          color: selectedMovieId === movie.id ? 'blue' : 'black'\n        },\n        children: movie.name + ', ' + movie.year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), selectedMovieId === movie.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: movie.comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [comment.text, \" - \", comment.user, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateComment(movie.id, comment.id),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteComment(movie.id, comment.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userName,\n          onChange: e => setUserName(e.target.value),\n          placeholder: \"Your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: commentText,\n          onChange: e => setCommentText(e.target.value),\n          placeholder: \"Leave a comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addComment(selectedMovieId),\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(UserManager, \"vksq7HCnljklkMuMPsRz7YCiUYE=\");\n_c = UserManager;\nexport default UserManager;\nvar _c;\n$RefreshReg$(_c, \"UserManager\");","map":{"version":3,"names":["React","useState","moviesData","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManager","_s","movies","setMovies","searchQuery","setSearchQuery","commentText","setCommentText","userName","setUserName","selectedMovieId","setSelectedMovieId","filteredMovies","filter","movie","name","toLowerCase","includes","addComment","movieId","updatedMovies","map","id","newCommentId","comments","length","Math","max","c","updatedMovie","text","user","updateComment","commentId","newText","prompt","trim","comment","deleteComment","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","margin","onClick","cursor","color","year","_c","$RefreshReg$"],"sources":["/Users/shuhang/Desktop/USC homework/DSCI551/movie-review-website/src/components/UserManager.js"],"sourcesContent":["import React, { useState } from 'react';\nimport moviesData from './movies.json';\n\nfunction UserManager() {\n  const [movies, setMovies] = useState(moviesData);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [commentText, setCommentText] = useState('');\n  const [userName, setUserName] = useState('');\n  const [selectedMovieId, setSelectedMovieId] = useState(null);\n\n  const filteredMovies = movies.filter(movie =>\n    movie.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const addComment = (movieId) => {\n    const updatedMovies = movies.map(movie => {\n      if (movie.id === movieId) {\n        const newCommentId = movie.comments.length > 0 ? Math.max(...movie.comments.map(c => c.id)) + 1 : 1;\n        const updatedMovie = {\n          ...movie,\n          comments: [...movie.comments, { id: newCommentId, text: commentText, user: userName }]\n        };\n        return updatedMovie;\n      }\n      return movie;\n    });\n    setMovies(updatedMovies);\n    setCommentText('');\n    setUserName('');\n  };\n\n  const updateComment = (movieId, commentId) => {\n    const newText = prompt(\"Update your comment:\");\n    if (newText !== null && newText.trim() !== '') {\n      setMovies(movies.map(movie => {\n        if (movie.id === movieId) {\n          return {\n            ...movie,\n            comments: movie.comments.map(comment => {\n              if (comment.id === commentId) {\n                return { ...comment, text: newText };\n              }\n              return comment;\n            })\n          };\n        }\n        return movie;\n      }));\n    }\n  };\n\n  const deleteComment = (movieId, commentId) => {\n    setMovies(movies.map(movie => {\n      if (movie.id === movieId) {\n        return {\n          ...movie,\n          comments: movie.comments.filter(comment => comment.id !== commentId)\n        };\n      }\n      return movie;\n    }));\n  };\n\n  return (\n    <div>\n      <h2>User Manager</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search for a movie\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n      {filteredMovies.length > 0 && (\n        filteredMovies.map(movie => (\n          <div key={movie.id} style={{ margin: '10px 0' }}>\n            <h3\n              onClick={() => setSelectedMovieId(selectedMovieId === movie.id ? null : movie.id)}\n              style={{ cursor: 'pointer', color: selectedMovieId === movie.id ? 'blue' : 'black' }}\n            >\n              {movie.name + ', ' + movie.year}\n            </h3>\n            {selectedMovieId === movie.id && (\n              <>\n                <ul>\n                  {movie.comments.map(comment => (\n                    <li key={comment.id}>\n                      {comment.text} - {comment.user}\n                      <button onClick={() => updateComment(movie.id, comment.id)}>Update</button>\n                      <button onClick={() => deleteComment(movie.id, comment.id)}>Delete</button>\n                    </li>\n                  ))}\n                </ul>\n                <input\n                  type=\"text\"\n                  value={userName}\n                  onChange={(e) => setUserName(e.target.value)}\n                  placeholder=\"Your name\"\n                />\n                <input\n                  type=\"text\"\n                  value={commentText}\n                  onChange={(e) => setCommentText(e.target.value)}\n                  placeholder=\"Leave a comment\"\n                />\n                <button onClick={() => addComment(selectedMovieId)}>Add Comment</button>\n              </>\n            )}\n          </div>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default UserManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}